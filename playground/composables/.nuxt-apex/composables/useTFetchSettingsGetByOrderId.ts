import {useFetch,type UseFetchOptions} from 'nuxt/app'
export const useTFetchSettingsGetByOrderId = <T extends unknown, R extends {data:number;result1:{data:string;result1:boolean;items2:{data:{data:boolean;};result1:boolean[];};};items2:{data:{data:{data:{data:(string|number[]|{data:number;})[][];};result1:{data:{data:{}[];};};};result1:number;items2:{data:((string|{data:number;})[][]|{data:string;})[];};};};}>(data: T, opt: UseFetchOptions<R> = {}) => useFetch<R>(`/api/settings/${encodeURIComponent(data.orderId)}`, { method: 'get', query:omit(data, 'orderId'), ...opt })
export const useTFetchSettingsGetByOrderIdAsync = <T extends unknown, R extends {data:number;result1:{data:string;result1:boolean;items2:{data:{data:boolean;};result1:boolean[];};};items2:{data:{data:{data:{data:(string|number[]|{data:number;})[][];};result1:{data:{data:{}[];};};};result1:number;items2:{data:((string|{data:number;})[][]|{data:string;})[];};};};}>(data: T, opt: UseFetchOptions<R> = {}) => $fetch<{data:number;result1:{data:string;result1:boolean;items2:{data:{data:boolean;};result1:boolean[];};};items2:{data:{data:{data:{data:(string|number[]|{data:number;})[][];};result1:{data:{data:{}[];};};};result1:number;items2:{data:((string|{data:number;})[][]|{data:string;})[];};};};}>(`/api/settings/${encodeURIComponent(data.orderId)}`, { method: 'get', query:omit(data, 'orderId'), ...opt })
