import {useFetch,type UseFetchOptions} from 'nuxt/app'
export const useTFetchCategoriesUpdate = <T extends Omit<{updatedAt:string;email:string;outerId:string;viewId:string;},'updatedAt'>&Partial<{prevId:string;}>, R extends {data:{data:number;result1:({data:number;result1:boolean;items2:number;}[][][]|{data:boolean;result1:(boolean[]|{data:number;result1:number;})[][];items2:{data:number;result1:boolean;}[];})[][];items2:string;};}>(data: T, opt: UseFetchOptions<R> = {}) => useFetch<R>(`/api/categories`, { method: 'put', body:data, ...opt })
export const useTFetchCategoriesUpdateAsync = <T extends Omit<{updatedAt:string;email:string;outerId:string;viewId:string;},'updatedAt'>&Partial<{prevId:string;}>, R extends {data:{data:number;result1:({data:number;result1:boolean;items2:number;}[][][]|{data:boolean;result1:(boolean[]|{data:number;result1:number;})[][];items2:{data:number;result1:boolean;}[];})[][];items2:string;};}>(data: T, opt: UseFetchOptions<R> = {}) => $fetch<{data:{data:number;result1:({data:number;result1:boolean;items2:number;}[][][]|{data:boolean;result1:(boolean[]|{data:number;result1:number;})[][];items2:{data:number;result1:boolean;}[];})[][];items2:string;};}>(`/api/categories`, { method: 'put', body:data, ...opt })
